{"version":3,"sources":["assets/github.svg","components/header.js","components/card.js","components/mansory-wrapper.js","contributor/random-fox-image.js","contributor/random-cat-image.js","contributor/random-dog-image.js","contributor/random-meme-image.js","contributor/random-user-profile.js","contributor/index.js","contributor/random-tech-images.js","contributor/random-pokemon-image.js","contributor/random-unsplash-image.js","contributor/random-picsum-image.js","contributor/random-grayscale-image.js","contributor/random-image-unsplash.js","contributor/random-lorem-pixel-image.js","contributor/random-answer-image.js","contributor/random-pixel-monsters-image.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","target","src","github","Card","data","children","username","avatar","alt","apiUrl","apiName","apiDescription","MasonryWrapper","breakpointCols","default","columnClassName","RandomFoxImage","useState","image","link","setData","fetchData","a","axios","get","response","status","Error","useEffect","RandomCatImage","dispatching","setDispatching","randomImg","setRandomImg","getRandomCat","file","RandomMemeImage","img","setImg","memes","preview","RandomUserProfile","loading","setLoading","getRandomUserProfile","results","picture","large","name","first","last","gender","phone","data_contributor","min","max","Math","floor","random","answer","setAnswer","getAnswerRandom","message","then","res","catch","err","console","log","App","map","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc3a215a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.b5d4c591.svg\";","import React from \"react\";\nimport github from \"../assets/github.svg\";\n\nexport default function Header(props) {\n  return (\n    <div className=\"mx-4 my-8\">\n      <div className=\"flex items-baseline\">\n        <a className=\"flex-auto\" href=\"/random-call-api\">\n          <h1 className=\"my-2 text-4xl font-bold font-sans px-4 font-bold\">\n            Random Call APIs\n          </h1>\n        </a>\n        <div className=\"\">\n          <a\n            href=\"https://github.com/akimabs/random-call-api\"\n            target=\"blank\"\n            className=\"inline-block\"\n          >\n            <embed className=\"h-8 w-8 pointer-events-none\" src={github} />\n          </a>\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n}\n","export default function Card({ data, children }) {\n  return (\n    <div className=\"mx-4 my-8 rounded-md p-4 md:px-4\">\n      <div className=\"flex flex-col\">\n        <a href={\"https://github.com/\" + data.username} target=\"blank\">\n          <div className=\"inline-flex items-center hover:bg-blue-100 p-2 rounded-md cursor-pointer\">\n            <img\n              className=\"rounded-full h-8 w-8\"\n              src={data.avatar}\n              alt=\"Contributor's avatar\"\n            />\n            <h1 className=\"px-2 text-xl\">{data.username}</h1>\n          </div>\n        </a>\n        <a href={data.apiUrl} target=\"blank\">\n          <div className=\"inline-flex items-center hover:bg-blue-100 p-2 rounded-md cursor-pointer\">\n            <img\n              className=\"rounded-full h-5 w-5\"\n              src=\"https://static.thenounproject.com/png/1429392-200.png\"\n              alt=\"Hyperlink icon\"\n            />\n            <h1 className=\"px-2 text-l\">{data.apiName}</h1>\n          </div>\n        </a>\n      </div>\n      <h1 className=\"px-2 text-l\">{data.apiDescription}</h1>\n      {children}\n    </div>\n  );\n}\n","import Masonry from \"react-masonry-css\";\nimport \"./index.css\";\n\nexport default function MasonryWrapper({ children }) {\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1,\n  };\n  return (\n    <Masonry\n      breakpointCols={breakpointColumnsObj}\n      className=\"my-masonry-grid\"\n      columnClassName=\"my-masonry-grid_column\"\n    >\n      {children}\n    </Masonry>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst BASE_URL = \"https://randomfox.ca/floof/\";\n\nconst RandomFoxImage = () => {\n  const [data, setData] = useState({ image: \"\", link: \"\" });\n  const fetchData = async () => {\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"akimabs\",\n        avatar: \"https://avatars.githubusercontent.com/u/46390089?v=4\",\n        apiUrl: \"https://randomfox.ca/floof/\",\n        apiName: \"random-fox\",\n        apiDescription: \"a random api for display random fox image\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src={data?.image}\n        alt=\"foximage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomFoxImage;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// components\nimport { Card } from \"../components\";\n// baseurl api's\nconst BASE_URL = \"https://aws.random.cat/meow\"\n\nconst RandomCatImage = () => {\n  const [dispatching, setDispatching] = useState(false)\n  const [randomImg, setRandomImg] = useState('')\n\n  const getRandomCat = async () => {\n    setDispatching(true)\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setRandomImg(response?.data?.file)\n    setDispatching(false)\n  }\n\n  useEffect(()=> { \n    getRandomCat();\n    return () => {\n      setDispatching(false)\n    }\n  },[])\n  \n  return (\n    <Card\n      data={{\n        username: \"Anggasayogo\",\n        avatar: \"https://avatars.githubusercontent.com/u/31529898?s=96&v=4\",\n        apiUrl: `https://aws.random.cat/meow`,\n        apiName: \"Random Cat Image\",\n        apiDescription: \"Random Api for displaying cat Image\",\n      }}\n    >\n      {\n        dispatching ? (\n          <p className=\"text-m my-3 text-center\">Loading...</p>\n        ) : (\n          <img\n            className=\"rounded-sm pt-2\"\n            src={randomImg}\n            alt=\"techImage\"\n          />\n        )\n      }\n    </Card>\n  );\n};\n\nexport default RandomCatImage;\n","import React, { useEffect, useState } from 'react'\nimport { Card } from '../components'\nimport axios from 'axios'\n\nconst RandomDogImage = () => {\n    const [data, setData] = useState()\n    const BASE_URL = 'https://dog.ceo/api/breeds/image/random'\n\n    useEffect(() => {\n        axios\n        .get(BASE_URL)\n        .then(res => setData(res.data))\n        .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <Card data={{\n            username: \"TaufikAkbar7\",\n            avatar: \"https://avatars.githubusercontent.com/u/63723517?v=4\",\n            apiUrl: \"https://dog.ceo/api/breeds/image/random\",\n            apiName: \"random-dog\",\n            apiDescription: \"a random api for display random dog image\",\n        }}>\n            {data && (\n                <img\n                className=\"rounded-sm h-200 w-200 pt-2\"\n                src={data.message}\n                alt=\"dogimage\"\n              />\n            )}\n        </Card>\n    )\n}\n\nexport default RandomDogImage\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst RandomMemeImage = () => {\n  const [img, setImg] = useState('');\n  const fetchData = async () => {\n    const response = await axios.get('https://meme-api.herokuapp.com/gimme/1');\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setImg(response?.data.memes[0].preview[2]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"Re-Creators\",\n        avatar: \"https://avatars.githubusercontent.com/u/51537231?v=4\",\n        apiUrl: \"https://github.com/D3vd/Meme_Api\",\n        apiName: \"random-meme\",\n        apiDescription: \"Getting random meme from reddit\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src={img}\n        alt=\"foximage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomMemeImage;","import { useState, useEffect } from \"react\";\nimport { Card } from \"../components\";\nimport axios from \"axios\";\n\nconst RandomUserProfile = () => {\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(false)\n\n  const getRandomUserProfile = async () => {\n    setLoading(true);\n    const response = await axios.get(\"https://randomuser.me/api/\");\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data?.results[0])\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getRandomUserProfile();\n    return () => {\n      setLoading(false)\n    }\n  }, [])\n\n  return (\n    <Card\n      data={{\n        username: \"ahmadkhairul\",\n        avatar: \"https://avatars.githubusercontent.com/u/57492891?v=4\",\n        apiUrl: \"https://randomuser.me/api/\",\n        apiName: \"random-user-profile\",\n        apiDescription: \"generating random user data. Like Lorem Ipsum, but for people.\",\n      }}\n    >\n      {loading ? (\n        <p className=\"text-m my-3 text-center\">Loading...</p>\n      ) : (\n        <div className=\"flex flex-col\">\n          <img\n            className=\"rounded-sm pt-2\"\n            src={data?.picture?.large}\n            alt=\"profileImage\"\n          />\n          <table>\n            <tbody>\n              <tr>\n                <td>Name</td>\n                <td>:</td>\n                <td>{data?.name?.first} {data?.name?.last}</td>\n              </tr>\n              <tr>\n                <td>Gender</td>\n                <td>:</td>\n                <td>{data?.gender}</td>\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>:</td>\n                <td>{data?.phone}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default RandomUserProfile;\n","import RandomFoxImage from \"./random-fox-image\";\nimport RandomCatImage from \"./random-cat-image\";\nimport RandomTechImages from \"./random-tech-images\";\nimport RandomPokemonImage from \"./random-pokemon-image\";\nimport RandomUnsplashImage from \"./random-unsplash-image\";\nimport RandomPicsumImage from \"./random-picsum-image\";\nimport RandomGrayscaleImage from \"./random-grayscale-image\";\nimport RandomImageUnsplash from \"./random-image-unsplash\";\nimport RandomLoremPixelImage from \"./random-lorem-pixel-image\";\nimport RandomAnswerImage from \"./random-answer-image\";\nimport RandomDogImage from \"./random-dog-image\";\nimport RandomMemeImage from \"./random-meme-image\";\nimport RandomUserProfile from \"./random-user-profile\";\nimport RandomPixelMonstersImage from \"./random-pixel-monsters-image\";\n\nexport const data_contributor = [\n  RandomFoxImage,\n  RandomCatImage,\n  RandomTechImages,\n  RandomPokemonImage,\n  RandomUnsplashImage,\n  RandomPicsumImage,\n  RandomUserProfile,\n  RandomGrayscaleImage,\n  RandomImageUnsplash,\n  RandomLoremPixelImage,\n  RandomAnswerImage,\n  RandomDogImage,\n  RandomMemeImage,\n  RandomPixelMonstersImage,\n];\n","import { Card } from \"../components\";\n\n// avatar can get from here(avatar_url)\n// https://api.github.com/users/akimabs\n\nconst RandomTechImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"hasbimsdd27\",\n        avatar: \"https://avatars.githubusercontent.com/u/58213577?v=4\",\n        apiUrl: \"https://placeimg.com/1000/1000/tech\",\n        apiName: \"placeimg.com\",\n        apiDescription: \"generate random tech image with custom dimension\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"https://placeimg.com/1000/1000/tech\"\n        alt=\"techImage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomTechImage;\n","import { Card } from '../components';\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst RandomPokemonImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'ddikodroid',\n        avatar: 'https://avatars.githubusercontent.com/u/4207774?v=4',\n        apiUrl: 'https://pokeapi.co/api/v2/',\n        apiName: 'pokeapi-v2',\n        apiDescription: 'shows random pokemon sprite',\n      }}>\n      <img\n        className='rounded-sm pt-2 h-400 w-400'\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n          randomInteger(0, 150) + 1\n        }.png`}\n        alt='pokemon'\n      />\n    </Card>\n  );\n};\n\nexport default RandomPokemonImage;\n","import { Card } from '../components';\n\nconst RandomUnsplashImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'mhmdbhsk',\n        avatar: 'https://github.com/mhmdbhsk.png',\n        apiUrl: 'https://source.unsplash.com/random/800x600',\n        apiName: 'random-unsplash-image',\n        apiDescription:\n          'A simple way to embedding random Unsplash photo with custom parameter like size and Unsplash user',\n      }}\n    >\n      <img\n        className='rounded-sm pt-2'\n        src='https://source.unsplash.com/random/800x600'\n        alt='unsplashImage'\n      />\n    </Card>\n  );\n};\n\nexport default RandomUnsplashImage;\n","import { Card } from \"../components\";\n\n// avatar can get from here(avatar_url)\n// https://api.github.com/users/akimabs\n\nconst RandomPicsumImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"hendraaagil\",\n        avatar: \"https://avatars.githubusercontent.com/u/54741166?v=4\",\n        apiUrl: \"https://picsum.photos\",\n        apiName: \"random lorem picsum\",\n        apiDescription: \"generate a random image with custom dimension\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src=\"https://picsum.photos/200\"\n        alt=\"random-pict\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomPicsumImage;\n","import { Card } from '../components';\n\nconst RandomGrayscaleImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'ddikodroid',\n        avatar: 'https://avatars.githubusercontent.com/u/4207774?v=4',\n        apiUrl: 'https://picsum.photos',\n        apiName: 'lorem picsum',\n        apiDescription: 'the lorem ipsum for photos, but in grayscale only',\n      }}>\n      <img\n        className='rounded-sm pt-2 h-400 w-400'\n        src='https://picsum.photos/400/400?grayscale'\n        alt='grayscale'\n      />\n    </Card>\n  );\n};\n\nexport default RandomGrayscaleImage;\n","import { Card } from \"../components\";\n\nconst RandomImageUnsplash = () => {\n  return (\n    <Card\n      data={{\n        username: \"Risal Walangadi\",\n        avatar: \"https://avatars.githubusercontent.com/u/32890714?v=4\",\n        apiUrl: \"https://source.unsplash.com\",\n        apiName: \"random-image-unsplash\",\n        apiDescription: \"Random image from unsplash\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"https://source.unsplash.com/random/400x400\"\n        alt=\"unsplashImage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomImageUnsplash;\n","import { Card } from '../components';\n\n\n\nconst RandomLoremPixelImage =() => {\n    return (\n        <Card\n      data={{\n        username: \"kfajarbowo\",\n        avatar: \"https://avatars.githubusercontent.com/u/54922255?s=40&v=4\",\n        apiUrl: \"http://lorempixel.com/200/300/nature\",\n        apiName: \"lorempixel.com\",\n        apiDescription: \"A random api for display nature image with custom dimention\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"http://lorempixel.com/200/300/nature\"\n        alt=\"natureImage\"\n      />\n    </Card>\n    )\n}\n\nexport default RandomLoremPixelImage\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"../components\";\n\n// BASEURL: https://yesno.wtf/api\n\nconst BASE_URL = \"https://yesno.wtf/api\";\n\nexport default function RandomAnswerImage() {\n\tconst [answer, setAnswer] = useState([]);\n\tconst getAnswerRandom = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(BASE_URL);\n\t\t\tsetAnswer(response.data);\n\t\t} catch (error) {\n\t\t\tthrow new Error(error.message);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tgetAnswerRandom();\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Card\n\t\t\t\tdata={{\n\t\t\t\t\tusername: \"riyaraa\",\n\t\t\t\t\tavatar: \"https://avatars.githubusercontent.com/u/50629099?v=4\",\n\t\t\t\t\tapiUrl: \"https://yesno.wtf/api\",\n\t\t\t\t\tapiName: \"answer-image-random-api\",\n\t\t\t\t\tapiDescription: \"this api generate random answer image\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<img src={answer.image} alt={answer.answer} />\n\t\t\t</Card>\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport { Card } from \"../components\";\n\nconst RandomPixelMonstersImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"anggaprytn\",\n        avatar: \"https://avatars.githubusercontent.com/u/20864493?v=4\",\n        apiUrl: \"https://pixelencounter.com/Api\",\n        apiName: \"Pixel Encounter API\",\n        apiDescription: \"Get a monster with random pattern as image.\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2 rounded mx-auto d-block\"\n        src=\"https://app.pixelencounter.com/api/basic/monsters/random/png?size=100\"\n        alt=\"monsters\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomPixelMonstersImage;\n","import \"./App.css\";\nimport { Header, MasonryWrapper } from \"./components\";\nimport { data_contributor } from \"./contributor\";\n\nfunction App() {\n  return (\n    <div className=\"mx-0 xl:mx-20 font-body\">\n      <Header />\n      <MasonryWrapper>\n        {data_contributor.map((res, index) => {\n          const Component = res;\n          return <Component key={index} />;\n        })}\n      </MasonryWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}